## <summarysocat_qrexect policy</summary>
### <desc>
###	<p>
###	  Policy for socat daemons implementing Unix-over-Qubes-RPC
##	  tunnels.
###	</p>
### </desc>


###############################
## <summary>
##	create socat_qrexec_var_run_t directory.
## </summary>
## <param name="domain"
##	<summary>
##	  Domain to permit.
##	</summary>
## </param>

interface(`socat_qrexec_create_socat_qrexec_var_run',`

	gen_require(`

		type socat_qrexec_var_run_t;
		type var_run_t;
	')

	filetrans_add_pattern($1, var_run_t, socat_qrexec_var_run_t, dir, "qrtunnels")
	allow $1 socat_qrexec_var_run_t : dir create;
')


###############################
## <summary>
##	Search socat_qrexec_var_run_t
## </summary>
## <param name="domain">
##	<summary>
##	  Domain to permit search.
##	</summary>
## </param>

interface(`socat_qrexec_search_socat_qrexec_var_run',`

	gen_require(`

		type socat_qrexec_var_run_t;
	')

	allow $1 socat_qrexec_var_run_t : dir search;
')


###############################
## <summary>
##	getattr and setattr socat_qrexec_var_run_t directory.
## </summary>
## <param name="domain"
##	<summary>
##	  Domain to permit.
##	</summary>
## </param>

interface(`socat_qrexec_setattr_socat_qrexec_var_run',`

	gen_require(`

		type socat_qrexec_var_run_t;
	')

	allow $1 socat_qrexec_var_run_t : dir { getattr setattr };
')


###############################
## <summary>
##	Base template for socat-qrexec tunnel.
## </summary>
## <param name="prefix">
##	<summary>
##	Prefix for the socat domain.
##	</summary>
## </param>
## <param name="client" optional="yes">
##	<summary>
##	  Domain to permit connection from.
##	</summary>
## </param>

template(`socat_qrexec_domain_base_template',`

	gen_require(`

		attribute socat_qrexec_domain;
		attribute socat_qrexec_initrc_domain;
		attribute socat_qrexec_socket_type;
		type locale_t;
		type socat_qrexec_var_run_t;
		type tmpfiles_t;
	')

	
	########################################
	#
	# Declarations
	#

	type $1_socat_t, socat_qrexec_domain;
	domain_type($1_socat_t)

	type $1_socat_initrc_t, socat_qrexec_initrc_domain;
	type $1_socat_initrc_exec_t;
	init_script_domain($1_socat_initrc_t, $1_socat_initrc_exec_t)

	type $1_socat_initrc_etc_t;
	files_config_file($1_socat_initrc_etc_t)

	type $1_socat_var_run_t;
	files_pid_file($1_socat_var_run_t)

	type $1_socat_socket_var_run_t, socat_qrexec_socket_type;
	files_type($1_socat_socket_var_run_t)


	########################################
	#
	# tmpfiles_t policy
	#

	filetrans_add_pattern(tmpfiles_t, socat_qrexec_var_run_t, $1_socat_socket_var_run_t, dir, "$1")


	########################################
	#
	# $1_socat_t policy
	#

	#allow $1_socat_t self : tcp_socket { create connect getattr write read shutdown };

	create_sock_files_pattern($1_socat_t, $1_socat_socket_var_run_t, $1_socat_socket_var_run_t)
	delete_sock_files_pattern($1_socat_t, $1_socat_socket_var_run_t, $1_socat_socket_var_run_t)
	allow $1_socat_t $1_socat_socket_var_run_t : sock_file setattr;


	#allowxperm $1_socat_t $1_socat_initrc_t : fifo_file ioctl 0x0;


	########################################
	#
	# $1_socat_initrc_t policy
	#

	# These include generic permissions required by OpenRC scripts.

	# cgroup cleanup
	allow $1_socat_initrc_t $1_socat_t : process signal;

	allow $1_socat_initrc_t $1_socat_t : dir search;
	# cmdline, stat:
	allow $1_socat_initrc_t $1_socat_t : file { read open };

	allow $1_socat_initrc_t $1_socat_initrc_etc_t : file { getattr read open };


	files_pid_filetrans($1_socat_initrc_t, $1_socat_var_run_t, file, "$1_socat.pid")
	allow $1_socat_initrc_t $1_socat_var_run_t : file { write create open getattr read unlink };


	filetrans_add_pattern($1_socat_initrc_t, socat_qrexec_var_run_t, $1_socat_socket_var_run_t, dir, "$1")
	allow $1_socat_initrc_t $1_socat_socket_var_run_t : dir { getattr setattr search read open };
	allow $1_socat_initrc_t $1_socat_socket_var_run_t : sock_file { getattr setattr };

	#SIGTERM
	allow $1_socat_initrc_t $1_socat_t : process { signal signull };


#	###############################
#	### <summary>
#	###	Connect, read, and write $1_socat_socket_var_run_t
#	### </summary>
#	### <param name="prefix">
#	###	<summary>
#	###	  Domain to permit use.
#	###	</summary>
#	### </param>
#	
#	interface(`$1_socat_rw_$1_socat_socket_var_run_sock_files',`
#	
#		optional_policy(`
#
#		# This simply allows $1_socat_t module to be removed,
#		# altered, and reinstalled.
#
#			gen_require(`
#		
#				type $1_socat_socket_var_run_t;
#				type $1_socat_t;
#			')
#		
#		
#			########################################
#			#
#			# $1 policy
#			#
#		
#			files_search_var_run($2)
#			socat_qrexec_search_socat_qrexec_var_run($2)
#			rw_sock_files_pattern($2, $1_socat_socket_var_run_t, $1_socat_socket_var_run_t)
#			allow $2 $1_socat_t : unix_stream_socket connectto;
#		')
#	')
#
#
#	optional_policy(`
#
#		gen_require(`
#
#			attribute $2;
#		')
#
#		########################################
#		#
#		# $2 policy
#		#
#
#		rw_sock_files_pattern($2, $1_socat_socket_var_run_t, $1_socat_socket_var_run_t)
#		allow $2 $1_socat_t : unix_stream_socket connectto;
#	')


#	optional_policy(`
#
#		# This simply allows $1 module to be removed,
#		# altered, and reinstalled.
#
#		gen_require(`
#
#			type $2;
#		')
#
#		########################################
#		#
#		# $2 policy
#		#
#
#		rw_sock_files_pattern($2, $1_socat_socket_var_run_t, $1_socat_socket_var_run_t)
#		allow $2 $1_socat_t : unix_stream_socket connectto;
#	')


	optional_policy(`

		# This simply allows socat module to be removed,
		# altered, and reinstalled.

		########################################
		#
		# Declarations
		#

		gen_require(`

			type socat_exec_t;
		')

		########################################
		#
		# $1_socat_initrc_t policy
		#

		domtrans_pattern($1_socat_initrc_t, socat_exec_t, $1_socat_t)
	')


	optional_policy(`

		# This simply allows qubes-core module to be removed,
		# altered, and reinstalled.

		gen_require(`

			attribute qrexec-client-vm_domain;
		')

		########################################
		#
		# Declarations
		#

		type $1_socat_qrexec-client-vm_domain_t, qrexec-client-vm_domain;
		domain_type($1_socat_qrexec-client-vm_domain_t)
		qubes_core_qrexec_client_vm_entry_type($1_socat_qrexec-client-vm_domain_t)
		role system_r types $1_socat_qrexec-client-vm_domain_t;

		type $1_socat_initrc_qrexec-client-vm_domain_t, qrexec-client-vm_domain;
		domain_type($1_socat_initrc_qrexec-client-vm_domain_t)
		qubes_core_qrexec_client_vm_entry_type($1_socat_initrc_qrexec-client-vm_domain_t)
		role system_r types $1_socat_initrc_qrexec-client-vm_domain_t;

		########################################
		#
		# $1_socat_t policy
		#

		qubes_core_qrexec_client_vm_domain_auto_transition_pattern($1_socat_t, $1_socat_qrexec-client-vm_domain_t)

		# 62 a1=f
		allow $1_socat_t $1_socat_qrexec-client-vm_domain_t : process signal;

		########################################
		#
		# $1_socat_initrc_t policy
		#

		qubes_core_qrexec_client_vm_domain_auto_transition_pattern($1_socat_initrc_t, $1_socat_initrc_qrexec-client-vm_domain_t)

		# 62 a1=f
		allow $1_socat_initrc_t $1_socat_initrc_qrexec-client-vm_domain_t : process signal;
		auditallow $1_socat_initrc_t $1_socat_initrc_qrexec-client-vm_domain_t : process signal;

		########################################
		#
		# $1_socat_initrc_qrexec-client-vm_domain_t  policy
		#

		allow $1_socat_initrc_qrexec-client-vm_domain_t $1_socat_initrc_t : process sigchld;

		# socket, null, bin
		allow $1_socat_initrc_qrexec-client-vm_domain_t $1_socat_initrc_t : fd use;
		allow $1_socat_initrc_qrexec-client-vm_domain_t $1_socat_initrc_t : unix_stream_socket { read write shutdown };
		auditallow $1_socat_initrc_qrexec-client-vm_domain_t $1_socat_initrc_t : unix_stream_socket { read write shutdown };
		#dontaudit $1_socat_initrc_qrexec-client-vm_domain_t $1_socat_initrc_t : unix_dgram_socket { read write };

		########################################
		#
		# $1_socat_qrexec-client-vm_domain_t policy
		#

		allow $1_socat_qrexec-client-vm_domain_t $1_socat_t : process sigchld;

		# null
		dontaudit $1_socat_qrexec-client-vm_domain_t $1_socat_initrc_t : fd use;

		# socket, null, bin
		allow $1_socat_qrexec-client-vm_domain_t $1_socat_t : fd use;
		allow $1_socat_qrexec-client-vm_domain_t $1_socat_t : unix_stream_socket { read write shutdown };
		#dontaudit $1_socat_qrexec-client-vm_domain_t $1_socat_t : unix_dgram_socket { read write };
	')
')



###############################
## <summary>
##	Faux TCP template for socat-qrexec tunnel.
## </summary>
## <param name="prefix">
##	<summary>
##	  Prefix for the socat domain.
##	</summary>
## </param>
## <param name="client" optional="yes">
##	<summary>
##	  Domain to permit connection from.
##	</summary>
## </param>

template(`socat_qrexec_domain_faux_tcp_template',`

	gen_require(`

		attribute socat_qrexec_faux_tcp_domain;
	')

	socat_qrexec_domain_base_template($1)

	########################################
	#
	# Declarations
	#

	typeattribute $1_socat_t socat_qrexec_faux_tcp_domain;


	########################################
	#
	# $1_socat_t policy
	#

	optional_policy(`
	
		# Making this optional simply allows socket_wrapper module to be
		# removed, altered, and reinstalled.
	
		gen_require(`
	
			type socket_wrapper_lib_t;
		')
	
		socket_wrapper_preload_socket_wrapper_lib_files($1_socat_t, $1_socat_initrc_t)
	')
')
